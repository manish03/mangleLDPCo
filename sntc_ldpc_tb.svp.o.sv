//#;; DO NOT EDIT THIS FILE
/*ENCRYPT_ME*/
////////////////////////////////////////////////////////////////////////////////
//# Copyright (c) 2018 Secantec
//# No Permission to modify and distribute this program
//# even if this copyright message remains unaltered.
//#
//# Author: Secantec 27 April, 2018
//# $Id: $//#
//# Revision History
//#       MM      17  April, 2018    Initial release
//#
////////////////////////////////////////////////////////////////////////////////

// /bin/rm -rf *simv* *csrc* ; perl vpp.pl -perl sntc_berlekamp.1.sv > sntc_berlekamp.1.vpp.sv ; vcs -sverilog -R -debug_all sntc_berlekamp.1.vpp.sv -l sntc_berlekamp.1.vpp.sv.log

 /*ENCRYPT_ME*/

/* verilator lint_off DECLFILENAME */

module  sntc_ldpc_tb #(
// NR_2_0_4/sntc_LDPCparam.sv
parameter MM   = 'h 000a8 ,
// parameter MM =  'h  000a8  , 
parameter NN   = 'h 000d0 ,
// parameter NN =  'h  000d0  , 
parameter cmax = 'h 00017 ,
// parameter cmax =  'h  00017  , 
parameter rmax = 'h 0000a ,
// parameter rmax =  'h  0000a  , 
// 208
// 168
parameter SUM_NN         = $clog2(NN+1), // 8 : nn_width
parameter SUM_MM         = $clog2(MM+1), // 8 : mm_width
parameter LEN            = MM,
parameter SUM_NN_WDTH    = $clog2(SUM_NN+2),
parameter SUM_MM_WDTH    = $clog2(SUM_MM+2),
`include "sntc_LDPC_dec_param.sv"
//parameter SUM_LEN        = SUM_MM
parameter MAX_SUM_WDTH_LONG = MAX_SUM_WDTH +1,
parameter SUM_LEN        = 32

) (

);

`ifdef ENCRYPT
`endif

int KL[int],BG[int], ER[int];
int par_bits_sent;
int par_bits_count;
real rate[int];
int Z[int],A[int];
string NR_BG[int];



// -1 : shortened
// NR_2_0_4.alist : ALIST name


// spl : NR 2 0 4.alist
// NR_BG: 2

// NR_Z: $NR_Z





wire [NN-1:0]                 tmp_bit;
reg  [NN-1:0] [1:0]           q0;
wire [MM-1:0]                 syndrome;
reg  [MM-1:0]                 exp_syn;
wire [SUM_LEN-1:0]            HamDist_sum_mm;
reg  [SUM_LEN-1:0]            HamDist_loop;
reg  [SUM_LEN-1:0]            HamDist_cntr;
reg  [SUM_LEN-1:0]            HamDist_loop_max;
reg  [SUM_LEN-1:0]            HamDist_loop_percentage;
wire [1:0]                    converged;
wire                          converged_valid;
reg                           start_int;
wire                          valid_int;
reg                           clk;
reg                           rstn;
int                           clk_cntr;
reg                           clr;
reg                           start;
wire                          valid;
wire [31:0]                   percent_probability_int;
real                          percent_probability_real;

reg  [SUM_LEN-1:0]            HamDist_iir1;
reg  [SUM_LEN-1:0]            HamDist_iir2;
reg  [SUM_LEN-1:0]            HamDist_iir3;
reg                           c_test =0;

always_comb begin
          HamDist_iir1 = 85;
          HamDist_iir2 = 15;
          HamDist_iir3 = 5;

end

wire valid_cword;
wire valid_cword_dec;
wire [NN-1:0] y_nr;
reg [NN-MM-1:0] y_nr_in;
reg [NN-1:0] y_nr_w_err;

sntc_ldpc_encoder_wrapper i_sntc_ldpc_encoder_wrapper (

                                     .y_nr_in_port(y_nr_in),
                                     .y_nr(y_nr),
                                     .valid_cword(valid_cword),
/* verilator lint_off UNUSED */
                                     .clr(clr),
/* verilator lint_on UNUSED */
                                     .rstn(rstn),
                                     .clk(clk)

);



sntc_ldpc_decoder_wrapper i_sntc_ldpc_decoder_wrapper (


                                     .q0(q0),

                                     .exp_syn(exp_syn),

                                     .start(start),
                                     .HamDist_iir1           (HamDist_iir1),
                                     .HamDist_iir2           (HamDist_iir1),
                                     .HamDist_iir3           (HamDist_iir1),
                                     .valid(valid),
                                     .converged(converged),
                                     .valid_cword(valid_cword_dec),
                                     .converged_valid(converged_valid),
                                     .percent_probability_int(percent_probability_int),
                                     .HamDist_loop_max(HamDist_loop_max),
                                     .HamDist_loop_percentage(HamDist_loop_percentage),
/* verilator lint_off UNUSED */
                                     .clr(clr),
/* verilator lint_on UNUSED */
                                     .rstn(rstn),
                                     .clk(clk)
);


`ifdef SIMULATION
 int num_pkts =1;
initial
begin
  clk = 0;
  clk_cntr = 1;
  forever
  begin
    clk = ~clk;
    if (clk) clk_cntr = clk_cntr + 1;
    //if (clk) if ((clk_cntr % 1000) === 0) $display("LDPC_TB:clk_cntr:%05d %t", clk_cntr, $time);
    if (clk) $display("LDPC_TB:clk_cntr:%05d %t", clk_cntr, $time);
    #5;
  end
end
initial
begin
  rstn = 0;
  clr = 0;
  repeat (10) @ (posedge clk);
  rstn = 1;
end


always_comb HamDist_loop_max        =  10;
always_comb HamDist_loop_percentage =  110;

initial
begin
  int timeoutfec;
  int ret;
  int decoder_only;
  int count_msg;
  int error_count = 0;
  //int KL[ 50];int BG[50];int ER[50];int A[50];string NR_BG[50];int z;
  int CLMNS_BG_n        ;
  int CLMNS_BG_m        ;
  int CLMNS_BG_n_minus_m;
  int base_g;
  int index;


  start                          <= 1'b0;
  decoder_only = 0;
  repeat (1) @ (posedge rstn);
  repeat (10) @ (posedge clk);

  if (c_test) begin


              q0  [0] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [1] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [2] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [3] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [4] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [5] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [6] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [7] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [8] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [9] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [10] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [11] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [12] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [13] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [14] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [15] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [16] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [17] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [18] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [19] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [20] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [21] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [22] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [23] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [24] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [25] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [26] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [27] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [28] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [29] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [30] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [31] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [32] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [33] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [34] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [35] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [36] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [37] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [38] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [39] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [40] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [41] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [42] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [43] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [44] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [45] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [46] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [47] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [48] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [49] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [50] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [51] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [52] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [53] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [54] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [55] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [56] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [57] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [58] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [59] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [60] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [61] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [62] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [63] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [64] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [65] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [66] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [67] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [68] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [69] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [70] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [71] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [72] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [73] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [74] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [75] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [76] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [77] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [78] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [79] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [80] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [81] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [82] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [83] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [84] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [85] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [86] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [87] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [88] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [89] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [90] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [91] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [92] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [93] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [94] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [95] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [96] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [97] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [98] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [99] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [100] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [101] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [102] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [103] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [104] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [105] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [106] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [107] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [108] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [109] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [110] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [111] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [112] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [113] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [114] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [115] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [116] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [117] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [118] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [119] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [120] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [121] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [122] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [123] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [124] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [125] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [126] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [127] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [128] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [129] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [130] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [131] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [132] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [133] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [134] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [135] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [136] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [137] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [138] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [139] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [140] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [141] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [142] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [143] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [144] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [145] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [146] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [147] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [148] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [149] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [150] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [151] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [152] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [153] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [154] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [155] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [156] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [157] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [158] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [159] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [160] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [161] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [162] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [163] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [164] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [165] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [166] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [167] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [168] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [169] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [170] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [171] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [172] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [173] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [174] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [175] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [176] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [177] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [178] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [179] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [180] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [181] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [182] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [183] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [184] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [185] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [186] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [187] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [188] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [189] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [190] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [191] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [192] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [193] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [194] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [195] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [196] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [197] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [198] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [199] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [200] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [201] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [202] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [203] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [204] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [205] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0  [206] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0  [207] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01

         exp_syn [0] <= 1'b1;
         exp_syn [1] <= 1'b1;
         exp_syn [2] <= 1'b1;
         exp_syn [3] <= 1'b1;
         exp_syn [4] <= 1'b1;
         exp_syn [5] <= 1'b1;
         exp_syn [6] <= 1'b1;
         exp_syn [7] <= 1'b1;
         exp_syn [8] <= 1'b1;
         exp_syn [9] <= 1'b1;
         exp_syn [10] <= 1'b1;
         exp_syn [11] <= 1'b1;
         exp_syn [12] <= 1'b1;
         exp_syn [13] <= 1'b1;
         exp_syn [14] <= 1'b1;
         exp_syn [15] <= 1'b1;
         exp_syn [16] <= 1'b1;
         exp_syn [17] <= 1'b1;
         exp_syn [18] <= 1'b1;
         exp_syn [19] <= 1'b1;
         exp_syn [20] <= 1'b1;
         exp_syn [21] <= 1'b1;
         exp_syn [22] <= 1'b1;
         exp_syn [23] <= 1'b1;
         exp_syn [24] <= 1'b1;
         exp_syn [25] <= 1'b1;
         exp_syn [26] <= 1'b1;
         exp_syn [27] <= 1'b1;
         exp_syn [28] <= 1'b1;
         exp_syn [29] <= 1'b1;
         exp_syn [30] <= 1'b1;
         exp_syn [31] <= 1'b1;
         exp_syn [32] <= 1'b1;
         exp_syn [33] <= 1'b1;
         exp_syn [34] <= 1'b1;
         exp_syn [35] <= 1'b1;
         exp_syn [36] <= 1'b1;
         exp_syn [37] <= 1'b1;
         exp_syn [38] <= 1'b1;
         exp_syn [39] <= 1'b1;
         exp_syn [40] <= 1'b1;
         exp_syn [41] <= 1'b1;
         exp_syn [42] <= 1'b1;
         exp_syn [43] <= 1'b1;
         exp_syn [44] <= 1'b1;
         exp_syn [45] <= 1'b1;
         exp_syn [46] <= 1'b1;
         exp_syn [47] <= 1'b1;
         exp_syn [48] <= 1'b1;
         exp_syn [49] <= 1'b1;
         exp_syn [50] <= 1'b1;
         exp_syn [51] <= 1'b1;
         exp_syn [52] <= 1'b1;
         exp_syn [53] <= 1'b1;
         exp_syn [54] <= 1'b1;
         exp_syn [55] <= 1'b1;
         exp_syn [56] <= 1'b1;
         exp_syn [57] <= 1'b1;
         exp_syn [58] <= 1'b1;
         exp_syn [59] <= 1'b1;
         exp_syn [60] <= 1'b1;
         exp_syn [61] <= 1'b1;
         exp_syn [62] <= 1'b1;
         exp_syn [63] <= 1'b1;
         exp_syn [64] <= 1'b1;
         exp_syn [65] <= 1'b1;
         exp_syn [66] <= 1'b1;
         exp_syn [67] <= 1'b1;
         exp_syn [68] <= 1'b1;
         exp_syn [69] <= 1'b1;
         exp_syn [70] <= 1'b1;
         exp_syn [71] <= 1'b1;
         exp_syn [72] <= 1'b1;
         exp_syn [73] <= 1'b1;
         exp_syn [74] <= 1'b1;
         exp_syn [75] <= 1'b1;
         exp_syn [76] <= 1'b1;
         exp_syn [77] <= 1'b1;
         exp_syn [78] <= 1'b1;
         exp_syn [79] <= 1'b1;
         exp_syn [80] <= 1'b1;
         exp_syn [81] <= 1'b1;
         exp_syn [82] <= 1'b1;
         exp_syn [83] <= 1'b1;
         exp_syn [84] <= 1'b1;
         exp_syn [85] <= 1'b1;
         exp_syn [86] <= 1'b1;
         exp_syn [87] <= 1'b1;
         exp_syn [88] <= 1'b1;
         exp_syn [89] <= 1'b1;
         exp_syn [90] <= 1'b1;
         exp_syn [91] <= 1'b1;
         exp_syn [92] <= 1'b1;
         exp_syn [93] <= 1'b1;
         exp_syn [94] <= 1'b1;
         exp_syn [95] <= 1'b1;
         exp_syn [96] <= 1'b1;
         exp_syn [97] <= 1'b1;
         exp_syn [98] <= 1'b1;
         exp_syn [99] <= 1'b1;
         exp_syn [100] <= 1'b1;
         exp_syn [101] <= 1'b1;
         exp_syn [102] <= 1'b1;
         exp_syn [103] <= 1'b1;
         exp_syn [104] <= 1'b1;
         exp_syn [105] <= 1'b1;
         exp_syn [106] <= 1'b1;
         exp_syn [107] <= 1'b1;
         exp_syn [108] <= 1'b1;
         exp_syn [109] <= 1'b1;
         exp_syn [110] <= 1'b1;
         exp_syn [111] <= 1'b1;
         exp_syn [112] <= 1'b1;
         exp_syn [113] <= 1'b1;
         exp_syn [114] <= 1'b1;
         exp_syn [115] <= 1'b1;
         exp_syn [116] <= 1'b1;
         exp_syn [117] <= 1'b1;
         exp_syn [118] <= 1'b1;
         exp_syn [119] <= 1'b1;
         exp_syn [120] <= 1'b1;
         exp_syn [121] <= 1'b1;
         exp_syn [122] <= 1'b1;
         exp_syn [123] <= 1'b1;
         exp_syn [124] <= 1'b1;
         exp_syn [125] <= 1'b1;
         exp_syn [126] <= 1'b1;
         exp_syn [127] <= 1'b1;
         exp_syn [128] <= 1'b1;
         exp_syn [129] <= 1'b1;
         exp_syn [130] <= 1'b1;
         exp_syn [131] <= 1'b1;
         exp_syn [132] <= 1'b1;
         exp_syn [133] <= 1'b1;
         exp_syn [134] <= 1'b1;
         exp_syn [135] <= 1'b1;
         exp_syn [136] <= 1'b1;
         exp_syn [137] <= 1'b1;
         exp_syn [138] <= 1'b1;
         exp_syn [139] <= 1'b1;
         exp_syn [140] <= 1'b1;
         exp_syn [141] <= 1'b1;
         exp_syn [142] <= 1'b1;
         exp_syn [143] <= 1'b1;
         exp_syn [144] <= 1'b1;
         exp_syn [145] <= 1'b1;
         exp_syn [146] <= 1'b1;
         exp_syn [147] <= 1'b1;
         exp_syn [148] <= 1'b1;
         exp_syn [149] <= 1'b1;
         exp_syn [150] <= 1'b1;
         exp_syn [151] <= 1'b1;
         exp_syn [152] <= 1'b1;
         exp_syn [153] <= 1'b1;
         exp_syn [154] <= 1'b1;
         exp_syn [155] <= 1'b1;
         exp_syn [156] <= 1'b1;
         exp_syn [157] <= 1'b1;
         exp_syn [158] <= 1'b1;
         exp_syn [159] <= 1'b1;
         exp_syn [160] <= 1'b1;
         exp_syn [161] <= 1'b1;
         exp_syn [162] <= 1'b1;
         exp_syn [163] <= 1'b1;
         exp_syn [164] <= 1'b1;
         exp_syn [165] <= 1'b1;
         exp_syn [166] <= 1'b1;
         exp_syn [167] <= 1'b1;

  end else begin //c_test==0
         y_nr_in[0] = 0; //data
         y_nr_in[1] = 1; //data
         y_nr_in[2] = 0; //data
         y_nr_in[3] = 1; //data
         y_nr_in[4] = 0; //data
         y_nr_in[5] = 1; //data
         y_nr_in[6] = 0; //data
         y_nr_in[7] = 1; //data
         y_nr_in[8] = 0; //data
         y_nr_in[9] = 1; //data
         y_nr_in[10] = 0; //data
         y_nr_in[11] = 1; //data
         y_nr_in[12] = 0; //data
         y_nr_in[13] = 1; //data
         y_nr_in[14] = 0; //data
         y_nr_in[15] = 1; //data
         y_nr_in[16] = 0; //data
         y_nr_in[17] = 1; //data
         y_nr_in[18] = 0; //data
         y_nr_in[19] = 1; //data
         y_nr_in[20] = 0; //data
         y_nr_in[21] = 1; //data
         y_nr_in[22] = 0; //data
         y_nr_in[23] = 1; //data
         y_nr_in[24] = 0; //data
         y_nr_in[25] = 1; //data
         y_nr_in[26] = 0; //data
         y_nr_in[27] = 1; //data
         y_nr_in[28] = 0; //data
         y_nr_in[29] = 1; //data
         y_nr_in[30] = 0; //data
         y_nr_in[31] = 1; //data
         y_nr_in[32] = 0; //data
         y_nr_in[33] = 1; //data
         y_nr_in[34] = 0; //data
         y_nr_in[35] = 1; //data
         y_nr_in[36] = 0; //data
         y_nr_in[37] = 1; //data
         y_nr_in[38] = 0; //data
         y_nr_in[39] = 1; //data

     repeat (1) @ (posedge clk);

     for (int i=0;i<NN-MM;i++) begin
     end
     for (int i=NN-MM;i<NN;i++) begin
     end
     if (~valid_cword)
          $fatal (0,"Please check encoder not a valid code word");
     else
          $info ("is a valid code word");

       y_nr_w_err[0] = 0 ; //error cword
       error_count++;
       y_nr_w_err[1] = 1 ; //error cword
       error_count++;
       y_nr_w_err[2] = 0 ; //error cword
       error_count++;
       y_nr_w_err[3] = 1 ; //error cword
       error_count++;
       y_nr_w_err[4] = 0 ; //error cword
       error_count++;
       y_nr_w_err[5] = 1 ; //error cword
       error_count++;
       y_nr_w_err[6] = 0 ; //error cword
       error_count++;
       y_nr_w_err[7] = 1 ; //error cword
       error_count++;
       y_nr_w_err[8] = 0 ; //error cword
       error_count++;
       y_nr_w_err[9] = 1 ; //error cword
       error_count++;
       y_nr_w_err[10] = 0 ; //error cword
       error_count++;
       y_nr_w_err[11] = 1 ; //error cword
       error_count++;
       y_nr_w_err[12] = 0 ; //error cword
       error_count++;
       y_nr_w_err[13] = 1 ; //error cword
       error_count++;
       y_nr_w_err[14] = 0 ; //error cword
       error_count++;
       y_nr_w_err[15] = 1 ; //error cword
       error_count++;
       y_nr_w_err[16] = 0 ; //error cword
       error_count++;
       y_nr_w_err[17] = 1 ; //error cword
       error_count++;
       y_nr_w_err[18] = 0 ; //error cword
       error_count++;
       y_nr_w_err[19] = 1 ; //error cword
       error_count++;
       y_nr_w_err[20] = 0 ; //error cword
       error_count++;
       y_nr_w_err[21] = 1 ; //error cword
       error_count++;
       y_nr_w_err[22] = 0 ; //error cword
       error_count++;
       y_nr_w_err[23] = 1 ; //error cword
       error_count++;
       y_nr_w_err[24] = 0 ; //error cword
       error_count++;
       y_nr_w_err[25] = 1 ; //error cword
       error_count++;
       y_nr_w_err[26] = 0 ; //error cword
       error_count++;
       y_nr_w_err[27] = 1 ; //error cword
       error_count++;
       y_nr_w_err[28] = 0 ; //error cword
       error_count++;
       y_nr_w_err[29] = 1 ; //error cword
       error_count++;
       y_nr_w_err[30] = 0 ; //error cword
       error_count++;
       y_nr_w_err[31] = 1 ; //error cword
       error_count++;
       y_nr_w_err[32] = 0 ; //error cword
       error_count++;
       y_nr_w_err[33] = 1 ; //error cword
       error_count++;
       y_nr_w_err[34] = 0 ; //error cword
       error_count++;
       y_nr_w_err[35] = 1 ; //error cword
       error_count++;
       y_nr_w_err[36] = 0 ; //error cword
       error_count++;
       y_nr_w_err[37] = 1 ; //error cword
       error_count++;
       y_nr_w_err[38] = 0 ; //error cword
       error_count++;
       y_nr_w_err[39] = 1 ; //error cword
       error_count++;
       y_nr_w_err[40] = 0 ; //error cword
       error_count++;
       y_nr_w_err[41] = 0 ; //error cword
       error_count++;
       y_nr_w_err[42] = 0 ; //error cword
       error_count++;
       y_nr_w_err[43] = 0 ; //error cword
       error_count++;
       y_nr_w_err[44] = 1 ; //error cword
       error_count++;
       y_nr_w_err[45] = 0 ; //error cword
       error_count++;
       y_nr_w_err[46] = 1 ; //error cword
       error_count++;
       y_nr_w_err[47] = 0 ; //error cword
       error_count++;
       y_nr_w_err[48] = 0 ; //error cword
       error_count++;
       y_nr_w_err[49] = 1 ; //error cword
       error_count++;
       y_nr_w_err[50] = 0 ; //error cword
       error_count++;
       y_nr_w_err[51] = 1 ; //error cword
       error_count++;
       y_nr_w_err[52] = 1 ; //error cword
       error_count++;
       y_nr_w_err[53] = 0 ; //error cword
       error_count++;
       y_nr_w_err[54] = 1 ; //error cword
       error_count++;
       y_nr_w_err[55] = 1 ; //error cword
       error_count++;
       y_nr_w_err[56] = 1 ; //error cword
       error_count++;
       y_nr_w_err[57] = 0 ; //error cword
       error_count++;
       y_nr_w_err[58] = 1 ; //error cword
       error_count++;
       y_nr_w_err[59] = 0 ; //error cword
       error_count++;
       y_nr_w_err[60] = 1 ; //error cword
       error_count++;
       y_nr_w_err[61] = 0 ; //error cword
       error_count++;
       y_nr_w_err[62] = 1 ; //error cword
       error_count++;
       y_nr_w_err[63] = 0 ; //error cword
       error_count++;
       y_nr_w_err[64] = 1 ; //error cword
       error_count++;
       y_nr_w_err[65] = 0 ; //error cword
       error_count++;
       y_nr_w_err[66] = 1 ; //error cword
       error_count++;
       y_nr_w_err[67] = 0 ; //error cword
       error_count++;
       y_nr_w_err[68] = 1 ; //error cword
       error_count++;
       y_nr_w_err[69] = 1 ; //error cword
       error_count++;
       y_nr_w_err[70] = 1 ; //error cword
       error_count++;
       y_nr_w_err[71] = 1 ; //error cword
       error_count++;
       y_nr_w_err[72] = 1 ; //error cword
       error_count++;
       y_nr_w_err[73] = 0 ; //error cword
       error_count++;
       y_nr_w_err[74] = 0 ; //error cword
       error_count++;
       y_nr_w_err[75] = 1 ; //error cword
       error_count++;
       y_nr_w_err[76] = 0 ; //error cword
       error_count++;
       y_nr_w_err[77] = 1 ; //error cword
       error_count++;
       y_nr_w_err[78] = 0 ; //error cword
       error_count++;
       y_nr_w_err[79] = 1 ; //error cword
       error_count++;
       y_nr_w_err[80] = 1 ; //error cword
       error_count++;
       y_nr_w_err[81] = 1 ; //error cword
       error_count++;
       y_nr_w_err[82] = 1 ; //error cword
       error_count++;
       y_nr_w_err[83] = 1 ; //error cword
       error_count++;
       y_nr_w_err[84] = 0 ; //error cword
       error_count++;
       y_nr_w_err[85] = 1 ; //error cword
       error_count++;
       y_nr_w_err[86] = 0 ; //error cword
       error_count++;
       y_nr_w_err[87] = 1 ; //error cword
       error_count++;
       y_nr_w_err[88] = 1 ; //error cword
       error_count++;
       y_nr_w_err[89] = 0 ; //error cword
       error_count++;
       y_nr_w_err[90] = 1 ; //error cword
       error_count++;
       y_nr_w_err[91] = 0 ; //error cword
       error_count++;
       y_nr_w_err[92] = 0 ; //error cword
       error_count++;
       y_nr_w_err[93] = 1 ; //error cword
       error_count++;
       y_nr_w_err[94] = 0 ; //error cword
       error_count++;
       y_nr_w_err[95] = 1 ; //error cword
       error_count++;
       y_nr_w_err[96] = 1 ; //error cword
       error_count++;
       y_nr_w_err[97] = 0 ; //error cword
       error_count++;
       y_nr_w_err[98] = 0 ; //error cword
       error_count++;
       y_nr_w_err[99] = 0 ; //error cword
       error_count++;
       y_nr_w_err[100] = 1 ; //error cword
       error_count++;
       y_nr_w_err[101] = 1 ; //error cword
       error_count++;
       y_nr_w_err[102] = 1 ; //error cword
       error_count++;
       y_nr_w_err[103] = 1 ; //error cword
       error_count++;
       y_nr_w_err[104] = 0 ; //error cword
       error_count++;
       y_nr_w_err[105] = 0 ; //error cword
       error_count++;
       y_nr_w_err[106] = 0 ; //error cword
       error_count++;
       y_nr_w_err[107] = 0 ; //error cword
       error_count++;
       y_nr_w_err[108] = 1 ; //error cword
       error_count++;
       y_nr_w_err[109] = 1 ; //error cword
       error_count++;
       y_nr_w_err[110] = 1 ; //error cword
       error_count++;
       y_nr_w_err[111] = 1 ; //error cword
       error_count++;
       y_nr_w_err[112] = 0 ; //error cword
       error_count++;
       y_nr_w_err[113] = 1 ; //error cword
       error_count++;
       y_nr_w_err[114] = 0 ; //error cword
       error_count++;
       y_nr_w_err[115] = 1 ; //error cword
       error_count++;
       y_nr_w_err[116] = 1 ; //error cword
       error_count++;
       y_nr_w_err[117] = 1 ; //error cword
       error_count++;
       y_nr_w_err[118] = 0 ; //error cword
       error_count++;
       y_nr_w_err[119] = 0 ; //error cword
       error_count++;
       y_nr_w_err[120] = 1 ; //error cword
       error_count++;
       y_nr_w_err[121] = 0 ; //error cword
       error_count++;
       y_nr_w_err[122] = 1 ; //error cword
       error_count++;
       y_nr_w_err[123] = 0 ; //error cword
       error_count++;
       y_nr_w_err[124] = 1 ; //error cword
       error_count++;
       y_nr_w_err[125] = 1 ; //error cword
       error_count++;
       y_nr_w_err[126] = 1 ; //error cword
       error_count++;
       y_nr_w_err[127] = 1 ; //error cword
       error_count++;
       y_nr_w_err[128] = 1 ; //error cword
       error_count++;
       y_nr_w_err[129] = 1 ; //error cword
       error_count++;
       y_nr_w_err[130] = 1 ; //error cword
       error_count++;
       y_nr_w_err[131] = 0 ; //error cword
       error_count++;
       y_nr_w_err[132] = 0 ; //error cword
       error_count++;
       y_nr_w_err[133] = 1 ; //error cword
       error_count++;
       y_nr_w_err[134] = 0 ; //error cword
       error_count++;
       y_nr_w_err[135] = 1 ; //error cword
       error_count++;
       y_nr_w_err[136] = 1 ; //error cword
       error_count++;
       y_nr_w_err[137] = 0 ; //error cword
       error_count++;
       y_nr_w_err[138] = 1 ; //error cword
       error_count++;
       y_nr_w_err[139] = 0 ; //error cword
       error_count++;
       y_nr_w_err[140] = 1 ; //error cword
       error_count++;
       y_nr_w_err[141] = 0 ; //error cword
       error_count++;
       y_nr_w_err[142] = 0 ; //error cword
       error_count++;
       y_nr_w_err[143] = 0 ; //error cword
       error_count++;
       y_nr_w_err[144] = 1 ; //error cword
       error_count++;
       y_nr_w_err[145] = 0 ; //error cword
       error_count++;
       y_nr_w_err[146] = 1 ; //error cword
       error_count++;
       y_nr_w_err[147] = 0 ; //error cword
       error_count++;
       y_nr_w_err[148] = 1 ; //error cword
       error_count++;
       y_nr_w_err[149] = 1 ; //error cword
       error_count++;
       y_nr_w_err[150] = 1 ; //error cword
       error_count++;
       y_nr_w_err[151] = 1 ; //error cword
       error_count++;
       y_nr_w_err[152] = 0 ; //error cword
       error_count++;
       y_nr_w_err[153] = 1 ; //error cword
       error_count++;
       y_nr_w_err[154] = 0 ; //error cword
       error_count++;
       y_nr_w_err[155] = 1 ; //error cword
       error_count++;
       y_nr_w_err[156] = 0 ; //error cword
       error_count++;
       y_nr_w_err[157] = 0 ; //error cword
       error_count++;
       y_nr_w_err[158] = 0 ; //error cword
       error_count++;
       y_nr_w_err[159] = 0 ; //error cword
       error_count++;
       y_nr_w_err[160] = 0 ; //error cword
       error_count++;
       y_nr_w_err[161] = 0 ; //error cword
       error_count++;
       y_nr_w_err[162] = 0 ; //error cword
       error_count++;
       y_nr_w_err[163] = 0 ; //error cword
       error_count++;
       y_nr_w_err[164] = 1 ; //error cword
       error_count++;
       y_nr_w_err[165] = 0 ; //error cword
       error_count++;
       y_nr_w_err[166] = 1 ; //error cword
       error_count++;
       y_nr_w_err[167] = 0 ; //error cword
       error_count++;
       y_nr_w_err[168] = 0 ; //error cword
       error_count++;
       y_nr_w_err[169] = 1 ; //error cword
       error_count++;
       y_nr_w_err[170] = 0 ; //error cword
       error_count++;
       y_nr_w_err[171] = 1 ; //error cword
       error_count++;
       y_nr_w_err[172] = 0 ; //error cword
       error_count++;
       y_nr_w_err[173] = 0 ; //error cword
       error_count++;
       y_nr_w_err[174] = 0 ; //error cword
       error_count++;
       y_nr_w_err[175] = 0 ; //error cword
       error_count++;
       y_nr_w_err[176] = 1 ; //error cword
       error_count++;
       y_nr_w_err[177] = 1 ; //error cword
       error_count++;
       y_nr_w_err[178] = 1 ; //error cword
       error_count++;
       y_nr_w_err[179] = 1 ; //error cword
       error_count++;
       y_nr_w_err[180] = 1 ; //error cword
       error_count++;
       y_nr_w_err[181] = 0 ; //error cword
       error_count++;
       y_nr_w_err[182] = 1 ; //error cword
       error_count++;
       y_nr_w_err[183] = 0 ; //error cword
       error_count++;
       y_nr_w_err[184] = 0 ; //error cword
       error_count++;
       y_nr_w_err[185] = 1 ; //error cword
       error_count++;
       y_nr_w_err[186] = 0 ; //error cword
       error_count++;
       y_nr_w_err[187] = 1 ; //error cword
       error_count++;
       y_nr_w_err[188] = 1 ; //error cword
       error_count++;
       y_nr_w_err[189] = 1 ; //error cword
       error_count++;
       y_nr_w_err[190] = 1 ; //error cword
       error_count++;
       y_nr_w_err[191] = 1 ; //error cword
       error_count++;
       y_nr_w_err[192] = 0 ; //error cword
       error_count++;
       y_nr_w_err[193] = 1 ; //error cword
       error_count++;
       y_nr_w_err[194] = 0 ; //error cword
       error_count++;
       y_nr_w_err[195] = 1 ; //error cword
       error_count++;
       y_nr_w_err[196] = 1 ; //error cword
       error_count++;
       y_nr_w_err[197] = 0 ; //error cword
       error_count++;
       y_nr_w_err[198] = 1 ; //error cword
       error_count++;
       y_nr_w_err[199] = 0 ; //error cword
       error_count++;
       y_nr_w_err[200] = 1 ; //error cword
       error_count++;
       y_nr_w_err[201] = 0 ; //error cword
       error_count++;
       y_nr_w_err[202] = 1 ; //error cword
       error_count++;
       y_nr_w_err[203] = 0 ; //error cword
       error_count++;
       y_nr_w_err[204] = 1 ; //error cword
       error_count++;
       y_nr_w_err[205] = 0 ; //error cword
       error_count++;
       y_nr_w_err[206] = 1 ; //error cword
       error_count++;
       y_nr_w_err[207] = 0 ; //error cword
       error_count++;

     for (int i=0;i<NN;i++) begin
            if (y_nr_w_err[i]) begin
                 q0  [i] <= 2'b11;  // BPSK 1: -1 === 2'b11
                                    // value of 1 means -1 in BPSK which is 2'b11
            end else begin
                 q0  [i] <= 2'b01;  // BPSK 0: 1  === 2'b01
                                    // value of 0 means 1 in BPSK which is 2'b01
            end
     end

     for (int i=0;i<MM;i++) begin
         exp_syn [i] <= 1'b0;
     end

  end




  repeat (4) @ (posedge clk);
  start                          <= 1'b1;
  repeat (1) @ (posedge clk);
  start                          <= 1'b0;
  repeat (num_pkts*160000) @(posedge clk);
  $display("LDPC_TB:finsh called timeout :%0d %t", timeoutfec, $time);
  repeat (timeoutfec) @(posedge clk);
  $finish();
end


assign percent_probability_real = 0.0384615398943424;
// ln((1-p)/p)*(2**11) + 0,5
assign percent_probability_int = 32'd 6592;

initial
begin
  repeat (600) @(posedge clk);
end

initial
begin
  forever begin
      if (converged[1]) begin
         $display("convergence end reached");
         if (converged[0]) begin
            $display("PASSED: Did converge");
         end else begin
            $error("FAILED: Did not converge");
         end
         $finish();
      end
      repeat (1) @(posedge clk);
  end
end

`endif




`ifdef ENCRYPT
`endif

endmodule

//C DBG: bsc p:0.100000 probability:2.197225 percent_probability_int:'d4500
//y_int:
 //555afa5f0a500af515a7f53af0f1a5afa9f555da50aaaaaaaaaa
//syny_err:
 //0200400200100008100880c0000680200320002200
//C DBG: bsc p:0.038462 probability:3.218876 percent_probability_int:'d6592
